{"ast":null,"code":"import { DialogType, MessageSeverity } from '../../services/alert.service';\nimport { Permission } from '../../models/permission.model';\nimport { Utilities } from '../../services/utilities';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/alert.service\";\nimport * as i2 from \"../../services/app-translation.service\";\nimport * as i3 from \"../../services/account.service\";\nimport * as i4 from \"../../services/notification.service\";\nconst _c0 = [\"statusHeaderTemplate\"];\nconst _c1 = [\"statusTemplate\"];\nconst _c2 = [\"dateTemplate\"];\nconst _c3 = [\"contentHeaderTemplate\"];\nconst _c4 = [\"contenBodytTemplate\"];\nconst _c5 = [\"actionsTemplate\"];\n\nfunction NotificationsViewerComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 7);\n  }\n}\n\nfunction NotificationsViewerComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n}\n\nfunction NotificationsViewerComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r12 = ctx.row;\n    const value_r13 = ctx.value;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"unread\", !row_r12.isRead);\n    i0.ɵɵattribute(\"title\", ctx_r5.getPrintedDate(value_r13));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.getPrintedDate(value_r13), \" \");\n  }\n}\n\nfunction NotificationsViewerComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r14 = ctx.row;\n    const value_r15 = ctx.value;\n    i0.ɵɵclassProp(\"unread\", !row_r14.isRead);\n    i0.ɵɵattribute(\"title\", row_r14.body);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", value_r15, \" \");\n  }\n}\n\nfunction NotificationsViewerComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r16 = ctx.row;\n    const value_r17 = ctx.value;\n    i0.ɵɵclassProp(\"unread\", !row_r16.isRead);\n    i0.ɵɵattribute(\"title\", row_r16.header);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", value_r17, \" \");\n  }\n}\n\nfunction NotificationsViewerComponent_ng_template_12_i_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 13);\n  }\n}\n\nfunction NotificationsViewerComponent_ng_template_12_i_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 14);\n  }\n}\n\nfunction NotificationsViewerComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 8);\n    i0.ɵɵlistener(\"click\", function NotificationsViewerComponent_ng_template_12_Template_a_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const row_r18 = restoredCtx.row;\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.deleteNotification(row_r18);\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelement(2, \"i\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"a\", 10);\n    i0.ɵɵlistener(\"click\", function NotificationsViewerComponent_ng_template_12_Template_a_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const row_r18 = restoredCtx.row;\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.togglePin(row_r18);\n    });\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵtemplate(5, NotificationsViewerComponent_ng_template_12_i_5_Template, 1, 0, \"i\", 11);\n    i0.ɵɵtemplate(6, NotificationsViewerComponent_ng_template_12_i_6_Template, 1, 0, \"i\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r18 = ctx.row;\n    i0.ɵɵpropertyInterpolate(\"tooltip\", i0.ɵɵpipeBind1(1, 4, \"notifications.Delete\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"tooltip\", i0.ɵɵpipeBind1(4, 6, \"notifications.Pin\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", row_r18.isPinned);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !row_r18.isPinned);\n  }\n}\n\nexport let NotificationsViewerComponent = /*#__PURE__*/(() => {\n  class NotificationsViewerComponent {\n    constructor(alertService, translationService, accountService, notificationService) {\n      this.alertService = alertService;\n      this.translationService = translationService;\n      this.accountService = accountService;\n      this.notificationService = notificationService;\n      this.columns = [];\n      this.rows = [];\n      this.dataLoadingConsecutiveFailurs = 0;\n      this.verticalScrollbar = false;\n    }\n\n    ngOnInit() {\n      if (this.isViewOnly) {\n        this.columns = [{\n          prop: 'date',\n          cellTemplate: this.dateTemplate,\n          width: 100,\n          resizeable: false,\n          canAutoResize: false,\n          sortable: false,\n          draggable: false\n        }, {\n          prop: 'header',\n          cellTemplate: this.contentHeaderTemplate,\n          width: 200,\n          resizeable: false,\n          sortable: false,\n          draggable: false\n        }];\n      } else {\n        const gT = key => this.translationService.getTranslation(key);\n\n        this.columns = [{\n          prop: '',\n          name: '',\n          width: 10,\n          headerTemplate: this.statusHeaderTemplate,\n          cellTemplate: this.statusTemplate,\n          resizeable: false,\n          canAutoResize: false,\n          sortable: false,\n          draggable: false\n        }, {\n          prop: 'date',\n          name: gT('notifications.Date'),\n          cellTemplate: this.dateTemplate,\n          width: 30\n        }, {\n          prop: 'body',\n          name: gT('notifications.Notification'),\n          cellTemplate: this.contenBodytTemplate,\n          width: 500\n        }, {\n          name: '',\n          width: 80,\n          cellTemplate: this.actionsTemplate,\n          resizeable: false,\n          canAutoResize: false,\n          sortable: false,\n          draggable: false\n        }];\n      }\n\n      this.initDataLoading();\n    }\n\n    ngOnDestroy() {\n      if (this.dataLoadingSubscription) {\n        this.dataLoadingSubscription.unsubscribe();\n      }\n    }\n\n    initDataLoading() {\n      if (this.isViewOnly && this.notificationService.recentNotifications) {\n        this.rows = this.processResults(this.notificationService.recentNotifications);\n        return;\n      }\n\n      this.loadingIndicator = true;\n      const dataLoadTask = this.isViewOnly ? this.notificationService.getNewNotifications() : this.notificationService.getNewNotificationsPeriodically();\n      this.dataLoadingSubscription = dataLoadTask.subscribe(notifications => {\n        this.loadingIndicator = false;\n        this.dataLoadingConsecutiveFailurs = 0;\n        this.rows = this.processResults(notifications);\n      }, error => {\n        this.loadingIndicator = false;\n        this.alertService.showMessage('Load Error', 'Loading new notifications from the server failed!', MessageSeverity.warn);\n        this.alertService.logError(error);\n\n        if (this.dataLoadingConsecutiveFailurs++ < 5) {\n          setTimeout(() => this.initDataLoading(), 5000);\n        } else {\n          this.alertService.showStickyMessage('Load Error', 'Loading new notifications from the server failed!', MessageSeverity.error);\n        }\n      });\n\n      if (this.isViewOnly) {\n        this.dataLoadingSubscription = null;\n      }\n    }\n\n    processResults(notifications) {\n      if (this.isViewOnly) {\n        notifications.sort((a, b) => {\n          return b.date.valueOf() - a.date.valueOf();\n        });\n      }\n\n      return notifications;\n    }\n\n    getPrintedDate(value) {\n      if (value) {\n        return Utilities.printTimeOnly(value) + ' on ' + Utilities.printDateOnly(value);\n      }\n    }\n\n    deleteNotification(row) {\n      this.alertService.showDialog('Are you sure you want to delete the notification \\\"' + row.header + '\\\"?', DialogType.confirm, () => this.deleteNotificationHelper(row));\n    }\n\n    deleteNotificationHelper(row) {\n      this.alertService.startLoadingMessage('Deleting...');\n      this.loadingIndicator = true;\n      this.notificationService.deleteNotification(row).subscribe(results => {\n        this.alertService.stopLoadingMessage();\n        this.loadingIndicator = false;\n        this.rows = this.rows.filter(item => item.id !== row.id);\n      }, error => {\n        this.alertService.stopLoadingMessage();\n        this.loadingIndicator = false;\n        this.alertService.showStickyMessage('Delete Error', `An error occured whilst deleting the notification.\\r\\nError: \"${Utilities.getHttpResponseMessages(error)}\"`, MessageSeverity.error, error);\n      });\n    }\n\n    togglePin(row) {\n      const pin = !row.isPinned;\n      const opText = pin ? 'Pinning' : 'Unpinning';\n      this.alertService.startLoadingMessage(opText + '...');\n      this.loadingIndicator = true;\n      this.notificationService.pinUnpinNotification(row, pin).subscribe(results => {\n        this.alertService.stopLoadingMessage();\n        this.loadingIndicator = false;\n        row.isPinned = pin;\n      }, error => {\n        this.alertService.stopLoadingMessage();\n        this.loadingIndicator = false;\n        this.alertService.showStickyMessage(opText + ' Error', `An error occured whilst ${opText} the notification.\\r\\nError: \"${Utilities.getHttpResponseMessages(error)}\"`, MessageSeverity.error, error);\n      });\n    }\n\n    get canManageNotifications() {\n      return this.accountService.userHasPermission(Permission.manageRolesPermission); // Todo: Consider creating separate permission for notifications\n    }\n\n  }\n\n  NotificationsViewerComponent.ɵfac = function NotificationsViewerComponent_Factory(t) {\n    return new (t || NotificationsViewerComponent)(i0.ɵɵdirectiveInject(i1.AlertService), i0.ɵɵdirectiveInject(i2.AppTranslationService), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i4.NotificationService));\n  };\n\n  NotificationsViewerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NotificationsViewerComponent,\n    selectors: [[\"app-notifications-viewer\"]],\n    viewQuery: function NotificationsViewerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n        i0.ɵɵviewQuery(_c1, 7);\n        i0.ɵɵviewQuery(_c2, 7);\n        i0.ɵɵviewQuery(_c3, 7);\n        i0.ɵɵviewQuery(_c4, 7);\n        i0.ɵɵviewQuery(_c5, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.statusHeaderTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.statusTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dateTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentHeaderTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contenBodytTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.actionsTemplate = _t.first);\n      }\n    },\n    inputs: {\n      isViewOnly: \"isViewOnly\",\n      verticalScrollbar: \"verticalScrollbar\"\n    },\n    decls: 14,\n    vars: 9,\n    consts: [[1, \"material\", \"colored-header\", \"sm\", \"table-hover\", 3, \"loadingIndicator\", \"rows\", \"rowHeight\", \"headerHeight\", \"footerHeight\", \"limit\", \"columns\", \"scrollbarV\", \"columnMode\"], [\"statusHeaderTemplate\", \"\"], [\"statusTemplate\", \"\"], [\"dateTemplate\", \"\"], [\"contentHeaderTemplate\", \"\"], [\"contenBodytTemplate\", \"\"], [\"actionsTemplate\", \"\"], [1, \"fa\", \"fa-bullhorn\"], [\"href\", \"javascript:;\", \"container\", \"body\", 1, \"btn\", \"btn-link\", \"btn-sm\", 3, \"tooltip\", \"click\"], [1, \"fa\", \"fa-times\"], [\"href\", \"javascript:;\", \"co\", \"\", \"container\", \"body\", 1, \"btn\", \"btn-link\", \"btn-sm\", 3, \"tooltip\", \"click\"], [\"class\", \"fa fa-thumb-tack\", 4, \"ngIf\"], [\"class\", \"fa fa-thumb-tack fa-rotate-90\", 4, \"ngIf\"], [1, \"fa\", \"fa-thumb-tack\"], [1, \"fa\", \"fa-thumb-tack\", \"fa-rotate-90\"]],\n    template: function NotificationsViewerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelement(1, \"ngx-datatable\", 0);\n        i0.ɵɵtemplate(2, NotificationsViewerComponent_ng_template_2_Template, 1, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(4, NotificationsViewerComponent_ng_template_4_Template, 1, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(6, NotificationsViewerComponent_ng_template_6_Template, 2, 4, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(8, NotificationsViewerComponent_ng_template_8_Template, 2, 4, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(10, NotificationsViewerComponent_ng_template_10_Template, 2, 4, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(12, NotificationsViewerComponent_ng_template_12_Template, 7, 8, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"loadingIndicator\", ctx.loadingIndicator)(\"rows\", ctx.rows)(\"rowHeight\", 35)(\"headerHeight\", ctx.isViewOnly ? 0 : 35)(\"footerHeight\", 35)(\"limit\", 10)(\"columns\", ctx.columns)(\"scrollbarV\", ctx.verticalScrollbar)(\"columnMode\", \"force\");\n      }\n    },\n    styles: [\".unread[_ngcontent-%COMP%]{font-weight:700}\"]\n  });\n  return NotificationsViewerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}