{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { filter, map, mergeMap } from 'rxjs/operators';\nimport { Utilities } from './utilities';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"@angular/router\";\nexport let AppTitleService = /*#__PURE__*/(() => {\n  class AppTitleService {\n    constructor(titleService, router) {\n      this.titleService = titleService;\n      this.router = router;\n      this.sub = this.router.events.pipe(filter(event => event instanceof NavigationEnd), map(_ => this.router.routerState.root), map(route => {\n        while (route.firstChild) {\n          route = route.firstChild;\n        }\n\n        return route;\n      }), mergeMap(route => route.data)).subscribe(data => {\n        let title = data.title;\n\n        if (title) {\n          const fragment = this.router.url.split('#')[1];\n\n          if (fragment) {\n            title += ' | ' + Utilities.toTitleCase(fragment);\n          }\n        }\n\n        if (title && this.appName) {\n          title += ' - ' + this.appName;\n        } else if (this.appName) {\n          title = this.appName;\n        }\n\n        if (title) {\n          this.titleService.setTitle(title);\n        }\n      });\n    }\n\n  }\n\n  AppTitleService.ɵfac = function AppTitleService_Factory(t) {\n    return new (t || AppTitleService)(i0.ɵɵinject(i1.Title), i0.ɵɵinject(i2.Router));\n  };\n\n  AppTitleService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppTitleService,\n    factory: AppTitleService.ɵfac\n  });\n  return AppTitleService;\n})();","map":null,"metadata":{},"sourceType":"module"}