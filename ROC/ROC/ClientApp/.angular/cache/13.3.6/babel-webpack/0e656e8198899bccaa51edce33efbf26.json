{"ast":null,"code":"// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\nimport { EventEmitter } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let BootstrapToggleDirective = /*#__PURE__*/(() => {\n  class BootstrapToggleDirective {\n    constructor(el) {\n      this.el = el;\n      this.ngModelChange = new EventEmitter();\n      this.checkedSubscription = fromEvent($(this.el.nativeElement), 'change').subscribe(e => this.ngModelChange.emit(e.target.checked));\n    }\n\n    set ngModel(value) {\n      this.toggle(value);\n    }\n\n    ngOnInit() {\n      setTimeout(() => this.initialize());\n    }\n\n    ngOnDestroy() {\n      this.destroy();\n    }\n\n    initialize(options) {\n      $(this.el.nativeElement).bootstrapToggle(options);\n    }\n\n    destroy() {\n      if (this.checkedSubscription) {\n        this.checkedSubscription.unsubscribe();\n      }\n\n      $(this.el.nativeElement).bootstrapToggle('destroy');\n    }\n\n    toggleOn() {\n      $(this.el.nativeElement).bootstrapToggle('on');\n    }\n\n    toggleOff() {\n      $(this.el.nativeElement).bootstrapToggle('off');\n    }\n\n    toggle(value) {\n      if (value == null) {\n        $(this.el.nativeElement).bootstrapToggle('toggle');\n      } else {\n        $(this.el.nativeElement).prop('checked', value).change();\n      }\n    }\n\n    enable() {\n      $(this.el.nativeElement).bootstrapToggle('enable');\n    }\n\n    disable() {\n      $(this.el.nativeElement).bootstrapToggle('disable');\n    }\n\n  }\n\n  BootstrapToggleDirective.ɵfac = function BootstrapToggleDirective_Factory(t) {\n    return new (t || BootstrapToggleDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  BootstrapToggleDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: BootstrapToggleDirective,\n    selectors: [[\"\", \"appBootstrapToggle\", \"\"]],\n    inputs: {\n      ngModel: \"ngModel\"\n    },\n    outputs: {\n      ngModelChange: \"ngModelChange\"\n    },\n    exportAs: [\"bootstrap-toggle\"]\n  });\n  return BootstrapToggleDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}