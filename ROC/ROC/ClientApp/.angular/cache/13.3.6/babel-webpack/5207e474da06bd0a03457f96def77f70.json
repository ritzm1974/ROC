{"ast":null,"code":"// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\nimport { EventEmitter } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let BootstrapTabDirective = /*#__PURE__*/(() => {\n  class BootstrapTabDirective {\n    constructor(el, zone) {\n      this.el = el;\n      this.zone = zone;\n      this.showBSTab = new EventEmitter();\n      this.hideBSTab = new EventEmitter();\n      this.tabShownSubscription = fromEvent($(this.el.nativeElement), 'show.bs.tab').subscribe(e => {\n        this.runInZone(() => this.showBSTab.emit({\n          type: e.type,\n          target: e.target,\n          relatedTarget: e.relatedTarget\n        }));\n      });\n      this.tabHiddenSubscription = fromEvent($(this.el.nativeElement), 'hidden.bs.tab').subscribe(e => {\n        this.runInZone(() => this.hideBSTab.emit({\n          type: e.type,\n          target: e.target,\n          relatedTarget: e.relatedTarget\n        }));\n      });\n    }\n\n    ngOnDestroy() {\n      this.tabShownSubscription.unsubscribe();\n      this.tabHiddenSubscription.unsubscribe();\n    }\n\n    runInZone(delegate) {\n      this.zone.run(() => {\n        delegate();\n      });\n    }\n\n    show(selector) {\n      $(selector).tab('show');\n    }\n\n  }\n\n  BootstrapTabDirective.ɵfac = function BootstrapTabDirective_Factory(t) {\n    return new (t || BootstrapTabDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n\n  BootstrapTabDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: BootstrapTabDirective,\n    selectors: [[\"\", \"appBootstrapTab\", \"\"]],\n    outputs: {\n      showBSTab: \"showBSTab\",\n      hideBSTab: \"hideBSTab\"\n    },\n    exportAs: [\"bootstrap-tab\"]\n  });\n  return BootstrapTabDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}