{"ast":null,"code":"// =============================\n// Email: info@ebenmonney.com\n// www.ebenmonney.com/templates\n// =============================\nimport { forwardRef } from '@angular/core';\nimport { NG_VALIDATORS } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport let EqualValidator = /*#__PURE__*/(() => {\n  class EqualValidator {\n    constructor(validateEqual, reverse) {\n      this.validateEqual = validateEqual;\n      this.reverse = reverse;\n    }\n\n    validate(c) {\n      const other = c.root.get(this.validateEqual);\n\n      if (!other) {\n        return null;\n      }\n\n      return this.reverse === 'true' ? this.validateReverse(c, other) : this.validateNoReverse(c, other);\n    }\n\n    validateNoReverse(c, other) {\n      return other.value === c.value ? null : {\n        validateEqual: true\n      };\n    }\n\n    validateReverse(c, other) {\n      if (c.value === other.value) {\n        if (other.errors) {\n          delete other.errors.validateEqual;\n\n          if (Object.keys(other.errors).length === 0) {\n            other.setErrors(null);\n          }\n        }\n      } else {\n        other.setErrors({\n          validateEqual: true\n        });\n      }\n\n      return null;\n    }\n\n  }\n\n  EqualValidator.ɵfac = function EqualValidator_Factory(t) {\n    return new (t || EqualValidator)(i0.ɵɵinjectAttribute('appValidateEqual'), i0.ɵɵinjectAttribute('reverse'));\n  };\n\n  EqualValidator.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: EqualValidator,\n    selectors: [[\"\", \"appValidateEqual\", \"\", \"formControlName\", \"\"], [\"\", \"appValidateEqual\", \"\", \"formControl\", \"\"], [\"\", \"appValidateEqual\", \"\", \"ngModel\", \"\"]],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => EqualValidator),\n      multi: true\n    }])]\n  });\n  return EqualValidator;\n})();","map":null,"metadata":{},"sourceType":"module"}