{"ast":null,"code":"import { MessageSeverity, DialogType } from '../../services/alert.service';\nimport { Utilities } from '../../services/utilities';\nimport { UserLogin } from '../../models/user-login.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/alert.service\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"../../services/configuration.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction LoginComponent_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function LoginComponent_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.closeModal();\n    });\n    i0.ɵɵelementStart(1, \"span\", 10);\n    i0.ɵɵtext(2, \"\\u00D7\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction LoginComponent_form_9_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 28);\n    i0.ɵɵtext(1, \" Username is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_form_9_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 28);\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_form_9_i_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 29);\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"is-valid\": a0,\n    \"is-invalid\": a1\n  };\n};\n\nfunction LoginComponent_form_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 11, 12);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_form_9_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n\n      const _r4 = i0.ɵɵreference(1);\n\n      const _r5 = i0.ɵɵreference(7);\n\n      const _r7 = i0.ɵɵreference(14);\n\n      const ctx_r10 = i0.ɵɵnextContext();\n      _r4.form.valid ? ctx_r10.login() : !_r5.valid && ctx_r10.showErrorAlert(\"Username is required\", \"Please enter a valid username\");\n      return !_r7.valid && ctx_r10.showErrorAlert(\"Password is required\", \"Please enter a valid password\");\n    });\n    i0.ɵɵelementStart(2, \"div\", 13)(3, \"label\", 14);\n    i0.ɵɵtext(4, \"Username:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 15)(6, \"input\", 16, 17);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_form_9_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.userLogin.userName = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, LoginComponent_form_9_span_8_Template, 2, 0, \"span\", 18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 13)(10, \"label\", 19);\n    i0.ɵɵtext(11, \"Password:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 15)(13, \"input\", 20, 21);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_form_9_Template_input_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.userLogin.password = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(15, LoginComponent_form_9_span_15_Template, 2, 0, \"span\", 18);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 13)(17, \"div\", 22)(18, \"div\", 23)(19, \"input\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_form_9_Template_input_ngModelChange_19_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.userLogin.rememberMe = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"label\", 25);\n    i0.ɵɵtext(21, \"Remember me\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(22, \"div\", 13)(23, \"div\", 22)(24, \"button\", 26);\n    i0.ɵɵtemplate(25, LoginComponent_form_9_i_25_Template, 1, 0, \"i\", 27);\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const _r4 = i0.ɵɵreference(1);\n\n    const _r5 = i0.ɵɵreference(7);\n\n    const _r7 = i0.ɵɵreference(14);\n\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(10, _c0, _r4.submitted && _r5.valid, _r4.submitted && !_r5.valid))(\"ngModel\", ctx_r1.userLogin.userName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r4.submitted && !_r5.valid);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(13, _c0, _r4.submitted && _r7.valid, _r4.submitted && !_r7.valid))(\"ngModel\", ctx_r1.userLogin.password);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", _r4.submitted && !_r7.valid);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.userLogin.rememberMe);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.isLoading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isLoading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.isLoading ? \"Logging in...\" : \"Login\", \" \");\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(alertService, authService, configurations) {\n      this.alertService = alertService;\n      this.authService = authService;\n      this.configurations = configurations;\n      this.userLogin = new UserLogin();\n      this.isLoading = false;\n      this.formResetToggle = true;\n      this.isModal = false;\n    }\n\n    ngOnInit() {\n      this.userLogin.rememberMe = this.authService.rememberMe;\n\n      if (this.getShouldRedirect()) {\n        this.authService.redirectLoginUser();\n      } else {\n        this.loginStatusSubscription = this.authService.getLoginStatusEvent().subscribe(isLoggedIn => {\n          if (this.getShouldRedirect()) {\n            this.authService.redirectLoginUser();\n          }\n        });\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.loginStatusSubscription) {\n        this.loginStatusSubscription.unsubscribe();\n      }\n    }\n\n    getShouldRedirect() {\n      return !this.isModal && this.authService.isLoggedIn && !this.authService.isSessionExpired;\n    }\n\n    showErrorAlert(caption, message) {\n      this.alertService.showMessage(caption, message, MessageSeverity.error);\n    }\n\n    closeModal() {\n      if (this.modalClosedCallback) {\n        this.modalClosedCallback();\n      }\n    }\n\n    login() {\n      this.isLoading = true;\n      this.alertService.startLoadingMessage('', 'Attempting login...');\n      this.authService.loginWithPassword(this.userLogin.userName, this.userLogin.password, this.userLogin.rememberMe).subscribe(user => {\n        setTimeout(() => {\n          this.alertService.stopLoadingMessage();\n          this.isLoading = false;\n          this.reset();\n\n          if (!this.isModal) {\n            this.alertService.showMessage('Login', `Welcome ${user.userName}!`, MessageSeverity.success);\n          } else {\n            this.alertService.showMessage('Login', `Session for ${user.userName} restored!`, MessageSeverity.success);\n            setTimeout(() => {\n              this.alertService.showStickyMessage('Session Restored', 'Please try your last operation again', MessageSeverity.default);\n            }, 500);\n            this.closeModal();\n          }\n        }, 500);\n      }, error => {\n        this.alertService.stopLoadingMessage();\n\n        if (Utilities.checkNoNetwork(error)) {\n          this.alertService.showStickyMessage(Utilities.noNetworkMessageCaption, Utilities.noNetworkMessageDetail, MessageSeverity.error, error);\n          this.offerAlternateHost();\n        } else {\n          const errorMessage = Utilities.getHttpResponseMessage(error);\n\n          if (errorMessage) {\n            this.alertService.showStickyMessage('Unable to login', this.mapLoginErrorMessage(errorMessage), MessageSeverity.error, error);\n          } else {\n            this.alertService.showStickyMessage('Unable to login', 'An error occured whilst logging in, please try again later.\\nError: ' + Utilities.getResponseBody(error), MessageSeverity.error, error);\n          }\n        }\n\n        setTimeout(() => {\n          this.isLoading = false;\n        }, 500);\n      });\n    }\n\n    offerAlternateHost() {\n      if (Utilities.checkIsLocalHost(location.origin) && Utilities.checkIsLocalHost(this.configurations.baseUrl)) {\n        this.alertService.showDialog('Dear Developer!\\nIt appears your backend Web API service is not running...\\n' + 'Would you want to temporarily switch to the online Demo API below?(Or specify another)', DialogType.prompt, value => {\n          this.configurations.baseUrl = value;\n          this.configurations.tokenUrl = value;\n          this.alertService.showStickyMessage('API Changed!', 'The target Web API has been changed to: ' + value, MessageSeverity.warn);\n        }, null, null, null, this.configurations.fallbackBaseUrl);\n      }\n    }\n\n    mapLoginErrorMessage(error) {\n      if (error === 'invalid_username_or_password') {\n        return 'Invalid username or password';\n      }\n\n      if (error === 'invalid_grant') {\n        return 'This account has been disabled';\n      }\n\n      return error;\n    }\n\n    reset() {\n      this.formResetToggle = false;\n      setTimeout(() => {\n        this.formResetToggle = true;\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AlertService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.ConfigurationService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    inputs: {\n      isModal: \"isModal\"\n    },\n    decls: 10,\n    vars: 2,\n    consts: [[1, \"d-flex\", \"h-90\"], [1, \"login-container\", \"m-auto\"], [1, \"card\", \"boxshadow\"], [1, \"card-header\", \"bg-primary\", \"dark\", \"text-white\", \"clearfix\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-lock\"], [\"type\", \"button\", \"class\", \"close float-right text-light\", \"aria-label\", \"Close\", 3, \"click\", 4, \"ngIf\"], [1, \"card-body\"], [1, \"col-md-8\", \"offset-md-2\"], [\"class\", \"login\", \"name\", \"loginForm\", \"novalidate\", \"\", 3, \"ngSubmit\", 4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", \"float-right\", \"text-light\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"name\", \"loginForm\", \"novalidate\", \"\", 1, \"login\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"form-group\", \"row\"], [\"for\", \"login-username\", 1, \"col-form-label\", \"col-md-3\"], [1, \"col-md-9\"], [\"type\", \"text\", \"id\", \"login-username\", \"name\", \"username\", \"placeholder\", \"Enter username\", \"autocomplete\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [\"username\", \"ngModel\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"login-password\", 1, \"col-form-label\", \"col-md-3\"], [\"type\", \"password\", \"id\", \"login-password\", \"name\", \"password\", \"placeholder\", \"Enter password\", \"autocomplete\", \"current-password\", \"required\", \"\", 1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [\"password\", \"ngModel\"], [1, \"offset-md-3\", \"col-md-9\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"id\", \"login-rememberme\", \"name\", \"rememberMe\", 1, \"form-check-input\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"login-rememberme\", 1, \"form-check-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"fa fa-circle-o-notch fa-spin\", 4, \"ngIf\"], [1, \"invalid-feedback\"], [1, \"fa\", \"fa-circle-o-notch\", \"fa-spin\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵelement(4, \"i\", 4);\n        i0.ɵɵtext(5, \" Login \");\n        i0.ɵɵtemplate(6, LoginComponent_button_6_Template, 3, 0, \"button\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 7);\n        i0.ɵɵtemplate(9, LoginComponent_form_9_Template, 27, 16, \"form\", 8);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.isModal);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.formResetToggle);\n      }\n    },\n    directives: [i4.NgIf, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i5.DefaultValueAccessor, i5.RequiredValidator, i4.NgClass, i5.NgControlStatus, i5.NgModel, i5.CheckboxControlValueAccessor],\n    styles: [\".boxshadow[_ngcontent-%COMP%]{position:relative;box-shadow:1px 2px 4px #00000080;padding:10px;background:white}.boxshadow[_ngcontent-%COMP%]:after{content:\\\"\\\";position:absolute;z-index:-1;box-shadow:0 15px 20px #0000004d;width:70%;left:15%;height:100px;bottom:0}.cardshadow[_ngcontent-%COMP%]{box-shadow:0 4px 8px #0003,0 6px 20px #00000030}.last-control-group[_ngcontent-%COMP%]{margin-bottom:-.75rem}.h-90[_ngcontent-%COMP%]{height:90%}@media (min-width: 768px){.login-container[_ngcontent-%COMP%]{width:700px}}@media (min-width: 1200px){.login-container[_ngcontent-%COMP%]{width:730px}}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}