{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { DBkeys } from './db-keys';\nimport { Utilities } from './utilities';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./local-store-manager.service\";\nimport * as i2 from \"./app-translation.service\";\nimport * as i3 from \"./theme-manager\";\nexport let ConfigurationService = /*#__PURE__*/(() => {\n  class ConfigurationService {\n    constructor(localStorage, translationService, themeManager) {\n      this.localStorage = localStorage;\n      this.translationService = translationService;\n      this.themeManager = themeManager;\n      this.baseUrl = environment.baseUrl || Utilities.baseUrl();\n      this.tokenUrl = environment.tokenUrl || environment.baseUrl || Utilities.baseUrl();\n      this.loginUrl = environment.loginUrl;\n      this.fallbackBaseUrl = 'https://quickapp.ebenmonney.com'; // ***End of defaults***\n\n      this._language = null;\n      this._homeUrl = null;\n      this._themeId = null;\n      this._showDashboardStatistics = null;\n      this._showDashboardNotifications = null;\n      this._showDashboardTodo = null;\n      this._showDashboardBanner = null;\n      this.onConfigurationImported = new Subject();\n      this.configurationImported$ = this.onConfigurationImported.asObservable();\n      this.loadLocalChanges();\n    }\n\n    set language(value) {\n      this._language = value;\n      this.saveToLocalStore(value, DBkeys.LANGUAGE);\n      this.translationService.changeLanguage(value);\n    }\n\n    get language() {\n      return this._language || ConfigurationService.defaultLanguage;\n    }\n\n    set themeId(value) {\n      value = +value;\n      this._themeId = value;\n      this.saveToLocalStore(value, DBkeys.THEME_ID);\n      this.themeManager.installTheme(this.themeManager.getThemeByID(value));\n    }\n\n    get themeId() {\n      return this._themeId || ConfigurationService.defaultThemeId;\n    }\n\n    set homeUrl(value) {\n      this._homeUrl = value;\n      this.saveToLocalStore(value, DBkeys.HOME_URL);\n    }\n\n    get homeUrl() {\n      return this._homeUrl || ConfigurationService.defaultHomeUrl;\n    }\n\n    set showDashboardStatistics(value) {\n      this._showDashboardStatistics = value;\n      this.saveToLocalStore(value, DBkeys.SHOW_DASHBOARD_STATISTICS);\n    }\n\n    get showDashboardStatistics() {\n      return this._showDashboardStatistics != null ? this._showDashboardStatistics : ConfigurationService.defaultShowDashboardStatistics;\n    }\n\n    set showDashboardNotifications(value) {\n      this._showDashboardNotifications = value;\n      this.saveToLocalStore(value, DBkeys.SHOW_DASHBOARD_NOTIFICATIONS);\n    }\n\n    get showDashboardNotifications() {\n      return this._showDashboardNotifications != null ? this._showDashboardNotifications : ConfigurationService.defaultShowDashboardNotifications;\n    }\n\n    set showDashboardTodo(value) {\n      this._showDashboardTodo = value;\n      this.saveToLocalStore(value, DBkeys.SHOW_DASHBOARD_TODO);\n    }\n\n    get showDashboardTodo() {\n      return this._showDashboardTodo != null ? this._showDashboardTodo : ConfigurationService.defaultShowDashboardTodo;\n    }\n\n    set showDashboardBanner(value) {\n      this._showDashboardBanner = value;\n      this.saveToLocalStore(value, DBkeys.SHOW_DASHBOARD_BANNER);\n    }\n\n    get showDashboardBanner() {\n      return this._showDashboardBanner != null ? this._showDashboardBanner : ConfigurationService.defaultShowDashboardBanner;\n    }\n\n    loadLocalChanges() {\n      if (this.localStorage.exists(DBkeys.LANGUAGE)) {\n        this._language = this.localStorage.getDataObject(DBkeys.LANGUAGE);\n        this.translationService.changeLanguage(this._language);\n      } else {\n        this.resetLanguage();\n      }\n\n      if (this.localStorage.exists(DBkeys.THEME_ID)) {\n        this._themeId = this.localStorage.getDataObject(DBkeys.THEME_ID);\n        this.themeManager.installTheme(this.themeManager.getThemeByID(this._themeId));\n      } else {\n        this.resetTheme();\n      }\n\n      if (this.localStorage.exists(DBkeys.HOME_URL)) {\n        this._homeUrl = this.localStorage.getDataObject(DBkeys.HOME_URL);\n      }\n\n      if (this.localStorage.exists(DBkeys.SHOW_DASHBOARD_STATISTICS)) {\n        this._showDashboardStatistics = this.localStorage.getDataObject(DBkeys.SHOW_DASHBOARD_STATISTICS);\n      }\n\n      if (this.localStorage.exists(DBkeys.SHOW_DASHBOARD_NOTIFICATIONS)) {\n        this._showDashboardNotifications = this.localStorage.getDataObject(DBkeys.SHOW_DASHBOARD_NOTIFICATIONS);\n      }\n\n      if (this.localStorage.exists(DBkeys.SHOW_DASHBOARD_TODO)) {\n        this._showDashboardTodo = this.localStorage.getDataObject(DBkeys.SHOW_DASHBOARD_TODO);\n      }\n\n      if (this.localStorage.exists(DBkeys.SHOW_DASHBOARD_BANNER)) {\n        this._showDashboardBanner = this.localStorage.getDataObject(DBkeys.SHOW_DASHBOARD_BANNER);\n      }\n    }\n\n    saveToLocalStore(data, key) {\n      setTimeout(() => this.localStorage.savePermanentData(data, key));\n    }\n\n    import(jsonValue) {\n      this.clearLocalChanges();\n\n      if (jsonValue) {\n        const importValue = Utilities.JsonTryParse(jsonValue);\n\n        if (importValue.language != null) {\n          this.language = importValue.language;\n        }\n\n        if (importValue.themeId != null) {\n          this.themeId = +importValue.themeId;\n        }\n\n        if (importValue.homeUrl != null) {\n          this.homeUrl = importValue.homeUrl;\n        }\n\n        if (importValue.showDashboardStatistics != null) {\n          this.showDashboardStatistics = importValue.showDashboardStatistics;\n        }\n\n        if (importValue.showDashboardNotifications != null) {\n          this.showDashboardNotifications = importValue.showDashboardNotifications;\n        }\n\n        if (importValue.showDashboardTodo != null) {\n          this.showDashboardTodo = importValue.showDashboardTodo;\n        }\n\n        if (importValue.showDashboardBanner != null) {\n          this.showDashboardBanner = importValue.showDashboardBanner;\n        }\n      }\n\n      this.onConfigurationImported.next();\n    }\n\n    export(changesOnly = true) {\n      const exportValue = {\n        language: changesOnly ? this._language : this.language,\n        themeId: changesOnly ? this._themeId : this.themeId,\n        homeUrl: changesOnly ? this._homeUrl : this.homeUrl,\n        showDashboardStatistics: changesOnly ? this._showDashboardStatistics : this.showDashboardStatistics,\n        showDashboardNotifications: changesOnly ? this._showDashboardNotifications : this.showDashboardNotifications,\n        showDashboardTodo: changesOnly ? this._showDashboardTodo : this.showDashboardTodo,\n        showDashboardBanner: changesOnly ? this._showDashboardBanner : this.showDashboardBanner\n      };\n      return JSON.stringify(exportValue);\n    }\n\n    clearLocalChanges() {\n      this._language = null;\n      this._themeId = null;\n      this._homeUrl = null;\n      this._showDashboardStatistics = null;\n      this._showDashboardNotifications = null;\n      this._showDashboardTodo = null;\n      this._showDashboardBanner = null;\n      this.localStorage.deleteData(DBkeys.LANGUAGE);\n      this.localStorage.deleteData(DBkeys.THEME_ID);\n      this.localStorage.deleteData(DBkeys.HOME_URL);\n      this.localStorage.deleteData(DBkeys.SHOW_DASHBOARD_STATISTICS);\n      this.localStorage.deleteData(DBkeys.SHOW_DASHBOARD_NOTIFICATIONS);\n      this.localStorage.deleteData(DBkeys.SHOW_DASHBOARD_TODO);\n      this.localStorage.deleteData(DBkeys.SHOW_DASHBOARD_BANNER);\n      this.resetLanguage();\n      this.resetTheme();\n    }\n\n    resetLanguage() {\n      const language = this.translationService.useBrowserLanguage();\n\n      if (language) {\n        this._language = language;\n      } else {\n        this._language = this.translationService.useDefaultLangage();\n      }\n    }\n\n    resetTheme() {\n      this.themeManager.installTheme();\n      this._themeId = null;\n    }\n\n  }\n\n  ConfigurationService.appVersion = '5.0.0'; // ***Specify default configurations here***\n\n  ConfigurationService.defaultLanguage = 'en';\n  ConfigurationService.defaultHomeUrl = '/';\n  ConfigurationService.defaultThemeId = 1;\n  ConfigurationService.defaultShowDashboardStatistics = true;\n  ConfigurationService.defaultShowDashboardNotifications = true;\n  ConfigurationService.defaultShowDashboardTodo = false;\n  ConfigurationService.defaultShowDashboardBanner = true;\n\n  ConfigurationService.ɵfac = function ConfigurationService_Factory(t) {\n    return new (t || ConfigurationService)(i0.ɵɵinject(i1.LocalStoreManager), i0.ɵɵinject(i2.AppTranslationService), i0.ɵɵinject(i3.ThemeManager));\n  };\n\n  ConfigurationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ConfigurationService,\n    factory: ConfigurationService.ɵfac\n  });\n  return ConfigurationService;\n})();","map":null,"metadata":{},"sourceType":"module"}